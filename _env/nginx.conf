worker_processes      1;

events {
  worker_connections  1024;
}

http {
  include mime.types;

  default_type        application/octet-stream;
  sendfile            on;
  keepalive_timeout   65;
  resolver            8.8.8.8 valid=5s;

  gzip on;
  gzip_types
    text/css
    text/plain
    text/xml
    application/json
    application/x-javascript
    text/javascript
    image/svg+xml
    image/x-icon
  ;

  add_header Strict-Transport-Security "max-age=15768000; includeSubDomains; preload" always;
  add_header X-Frame-Options "SAMEORIGIN" always;

  server {
    listen         80;
    server_name    localhost;
    root           /var/www;

    proxy_pass_request_headers on;
    proxy_set_header X-Real-IP          $remote_addr;
    proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto  https;
    proxy_set_header Host               $host;

    location /ide/ {
      proxy_pass https://patience.studentrobotics.org/ide/;
    }

    location /forum/ {
      proxy_pass https://patience.studentrobotics.org/forum/;
    }

    location /trac/ {
      proxy_pass https://saffron.studentrobotics.org/trac/;
    }

    location /git/ {
      proxy_pass https://saffron.studentrobotics.org/git/;
    }

    location /cgit/ {
      proxy_pass https://saffron.studentrobotics.org/cgit/;
    }

    location /cgit-data/ {
      proxy_pass https://saffron.studentrobotics.org/cgit-data/;
    }

    location /gerrit/ {
      proxy_pass https://saffron.studentrobotics.org$request_uri;
    }

    location /docs/python/ {
      proxy_pass https://patience.studentrobotics.org/docs/python/;
    }

    location /docs/ {
      proxy_pass       https://srobo.github.io/docs/;
      proxy_set_header Host srobo.github.io;
      # Work around github.io issuing HTTP (not HTTPS) redirects when
      # redirecting to cannonical forms of urls. For example, given the url
      # "https://studentrobotics.org/docs/programming", which we proxy to
      # "https://srobo.github.io/docs/programming", it issues a redirect to
      # "http://srobo.github.io/docs/programming/" which we would otherwise
      # expose to the client, sending them away from our domain.
      proxy_redirect   http://srobo.github.io/docs/ /docs/;
    }

    location /userman/ {
      proxy_pass https://patience.studentrobotics.org/userman/;
    }

    location /piwik/ {
      proxy_pass https://saffron.studentrobotics.org/piwik/;
    }

    location /robogit/ {
      proxy_pass https://patience.studentrobotics.org/robogit/;
    }

    location /robogit-ro/ {
      proxy_pass https://patience.studentrobotics.org/robogit-ro/;
    }

    location /comp-api/ {
      proxy_pass https://srcomp.studentrobotics.org/comp-api/;
    }

    # During the competition we un-comment this block to override the homepage
    # with the comeptition-specific one
    # location = / {
    #   proxy_pass       https://srobo.github.io/competition-website/comp/;
    #   proxy_set_header Host srobo.github.io;
    #   # Work around github.io redirect issue (see above)
    #   proxy_redirect   http://srobo.github.io/competition-website/comp/ /;
    #
    #   sub_filter "/competition-website/comp/" "/comp/";
    #   sub_filter_once off;
    #   sub_filter_last_modified on;
    #   # Tell GitHub that we want these pages to be sent to us uncompressed
    #   # otherwise the sub_filter above doesn't work. We'll compress it on the
    #   # way out anyway, so clients don't lose anything by us doing this.
    #   proxy_set_header Accept-Encoding "";
    # }
    # Provide access to the competition pages under the normal prefix
    location /comp/ {
      proxy_pass       https://srobo.github.io/competition-website/comp/;
      proxy_set_header Host srobo.github.io;
      # Work around github.io redirect issue (see above)
      proxy_redirect   http://srobo.github.io/competition-website/comp/ /comp/;

      sub_filter "/competition-website/comp/" "/comp/";
      sub_filter_once off;
      sub_filter_last_modified on;
      # Tell GitHub that we want these pages to be sent to us uncompressed
      # otherwise the sub_filter above doesn't work. We'll compress it on the
      # way out anyway, so clients don't lose anything by us doing this.
      proxy_set_header Accept-Encoding "";
    }
    # Also provide access under the prefix which github insists on using
    # so that the secondary resources (JS, CSS, etc.) load
    location /competition-website/ {
      proxy_pass       https://srobo.github.io/competition-website/;
      proxy_set_header Host srobo.github.io;
      # Work around github.io redirect issue (see above)
      proxy_redirect   http://srobo.github.io/competition-website/ /competition-website/;
    }

    # Disable custom media consent endpoint
    #location /mediaconsent/ {
    #  proxy_pass https://patience.studentrobotics.org/mediaconsent/;
    #}

    location /tickets/ {
      proxy_pass https://patience.studentrobotics.org/tickets/;
    }

    location /ticket-api/ {
      proxy_pass https://patience.studentrobotics.org/ticket-api/;
    }

    location /style/ {
      proxy_pass       https://srobo.github.io/style/;
      proxy_set_header Host srobo.github.io;
      # Work around github.io redirect issue (see above)
      proxy_redirect   http://srobo.github.io/style/ /style/;
    }

    rewrite ^/schools/how_to_enter /compete redirect;
    rewrite ^/about/how_to_help    /volunteer redirect;
    rewrite ^/about/contactus      /contact redirect;
    rewrite ^/sponsors             /contact redirect;
    rewrite ^/about/sponsors       /contact redirect;
    rewrite ^/key_dates            /events redirect;
    rewrite ^/feed.php             /feed.xml redirect;
    rewrite ^/password             /userman/ permanent;
    rewrite ^/rules                /docs/rules/ permanent;

    location / {
      proxy_pass       https://srobo.github.io/website/;
      proxy_set_header Host srobo.github.io;
      # Work around github.io redirect issue (see above)
      proxy_redirect   http://srobo.github.io/website/ /website/;
    }
  }
}
